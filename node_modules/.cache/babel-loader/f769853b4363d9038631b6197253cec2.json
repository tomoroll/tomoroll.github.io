{"ast":null,"code":"import Web3 from 'web3';\nvar getWeb3 = new Promise(function (resolve, reject) {\n  // wait for loading completion before loading web3, to be sure it's\n  // already injected\n  window.addEventListener('load', function () {\n    // checking if Web3 has been injected by the browser MetaMask\n    if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n      // Use MetaMask's provider.\n      var web3 = new Web3(window.web3.currentProvider);\n      var results = {\n        web3: web3\n      };\n      resolve(results);\n    } else {\n      // user is not running MetaMask?\n      reject(new Error('Is MetaMask running?'));\n    }\n  });\n});\nexport default getWeb3;","map":{"version":3,"sources":["/Users/hoank/resource/N3Company/tomoroll-frontend/src/utils/get-web3.js"],"names":["Web3","getWeb3","Promise","resolve","reject","window","addEventListener","web3","currentProvider","results","Error"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/C;AACA;AACAC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC;AACA,QAAI,OAAOD,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACE,IAAd,KAAuB,WAA5D,EAAyE;AACvE;AACA,UAAMA,IAAI,GAAG,IAAIP,IAAJ,CAASK,MAAM,CAACE,IAAP,CAAYC,eAArB,CAAb;AACA,UAAMC,OAAO,GAAG;AAAEF,QAAAA,IAAI,EAAJA;AAAF,OAAhB;AACAJ,MAAAA,OAAO,CAACM,OAAD,CAAP;AACD,KALD,MAKO;AACL;AACAL,MAAAA,MAAM,CAAC,IAAIM,KAAJ,CAAU,sBAAV,CAAD,CAAN;AACD;AACF,GAXD;AAYD,CAfe,CAAhB;AAkBA,eAAeT,OAAf","sourcesContent":["import Web3 from 'web3';\n\nconst getWeb3 = new Promise((resolve, reject) => {\n  // wait for loading completion before loading web3, to be sure it's\n  // already injected\n  window.addEventListener('load', () => {\n    // checking if Web3 has been injected by the browser MetaMask\n    if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n      // Use MetaMask's provider.\n      const web3 = new Web3(window.web3.currentProvider);\n      const results = { web3 };\n      resolve(results);\n    } else {\n      // user is not running MetaMask?\n      reject(new Error('Is MetaMask running?'));\n    }\n  });\n});\n\n\nexport default getWeb3;\n"]},"metadata":{},"sourceType":"module"}