{"ast":null,"code":"import _classCallCheck from \"/Users/hoank/resource/N3Company/tomoroll-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hoank/resource/N3Company/tomoroll-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hoank/resource/N3Company/tomoroll-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hoank/resource/N3Company/tomoroll-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hoank/resource/N3Company/tomoroll-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hoank/resource/N3Company/tomoroll-frontend/src/components/RollUnder.jsx\";\nimport React from 'react';\nimport './css/RollUnder.css';\nimport BaseGame from './BaseGame';\nimport ContractInfo from './ContractInfo';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport RollUnderRecap from './RollUnderRecap';\nimport RollButton from './RollButton';\nimport Transactions from './Transactions';\nimport { Networks, contractAddresses } from '../utils/etheroll-contract';\n\nvar RollUnder =\n/*#__PURE__*/\nfunction (_BaseGame) {\n  _inherits(RollUnder, _BaseGame);\n\n  function RollUnder(props) {\n    var _this;\n\n    _classCallCheck(this, RollUnder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RollUnder).call(this, props));\n    _this.state = {\n      betSize: 0.0001,\n      chances: 50,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      minChances: ChanceOfWinning.defaultProps.min,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      accountAddress: null,\n      accountBalance: 0,\n      web3: null,\n      network: Networks.mainnet,\n      contract: null,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      // most recent transaction is last in the array\n      allTransactions: [],\n      filteredTransactions: [],\n      transactionsFilter: '#all-transactions'\n    };\n    return _this;\n  }\n\n  _createClass(RollUnder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var setState = function setState(dict) {\n        return _this2.setState(dict);\n      };\n\n      this.getWeb3(setState);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.getTransactionsIntervalId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          accountAddress = _this$state.accountAddress,\n          accountBalance = _this$state.accountBalance,\n          betSize = _this$state.betSize,\n          chances = _this$state.chances,\n          contractAddress = _this$state.contractAddress,\n          contractBalance = _this$state.contractBalance,\n          filteredTransactions = _this$state.filteredTransactions,\n          minBet = _this$state.minBet,\n          maxBet = _this$state.maxBet,\n          minChances = _this$state.minChances,\n          maxChances = _this$state.maxChances,\n          network = _this$state.network;\n\n      var setState = function setState(dict) {\n        return _this3.setState(dict);\n      };\n\n      var rollUnder = chances;\n      var rollDisabled = accountAddress === null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(ContractInfo, {\n        accountAddress: accountAddress,\n        accountBalance: accountBalance,\n        contractAddress: contractAddress,\n        contractBalance: contractBalance,\n        network: network,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"RollUnder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Place your bet\"), React.createElement(BetSize, {\n        betSize: betSize,\n        min: minBet,\n        max: maxBet,\n        updateBetSize: this.updateState('betSize'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(ChanceOfWinning, {\n        chances: chances,\n        min: minChances,\n        max: maxChances,\n        updateChances: this.updateState('chances'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(RollUnderRecap, {\n        value: rollUnder,\n        betSize: betSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(RollButton, {\n        isDisabled: rollDisabled,\n        onClick: function onClick() {\n          return _this3.onRollClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(Transactions, {\n        network: network,\n        onClick: function onClick(transactionsFilter) {\n          return _this3.filterTransactions(transactionsFilter, setState);\n        },\n        transactions: filteredTransactions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RollUnder;\n}(BaseGame);\n\nRollUnder.propTypes = BaseGame.propTypes;\nexport default RollUnder;","map":{"version":3,"sources":["/Users/hoank/resource/N3Company/tomoroll-frontend/src/components/RollUnder.jsx"],"names":["React","BaseGame","ContractInfo","BetSize","ChanceOfWinning","RollUnderRecap","RollButton","Transactions","Networks","contractAddresses","RollUnder","props","state","betSize","chances","minBet","defaultProps","min","maxBet","max","minChances","maxChances","accountAddress","accountBalance","web3","network","mainnet","contract","contractAddress","contractBalance","allTransactions","filteredTransactions","transactionsFilter","setState","dict","getWeb3","clearInterval","getTransactionsIntervalId","rollUnder","rollDisabled","updateState","onRollClick","filterTransactions","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/RollUnder.css';\nimport BaseGame from './BaseGame';\nimport ContractInfo from './ContractInfo';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport RollUnderRecap from './RollUnderRecap';\nimport RollButton from './RollButton';\nimport Transactions from './Transactions';\nimport {\n  Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nclass RollUnder extends BaseGame {\n  constructor(props) {\n    super(props);\n    this.state = {\n      betSize: 0.0001,\n      chances: 50,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      minChances: ChanceOfWinning.defaultProps.min,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      accountAddress: null,\n      accountBalance: 0,\n      web3: null,\n      network: Networks.mainnet,\n      contract: null,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      // most recent transaction is last in the array\n      allTransactions: [],\n      filteredTransactions: [],\n      transactionsFilter: '#all-transactions',\n    };\n  }\n\n  componentDidMount() {\n    const setState = dict => this.setState(dict);\n    this.getWeb3(setState);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.getTransactionsIntervalId);\n  }\n\n  render() {\n    const {\n      accountAddress, accountBalance, betSize, chances, contractAddress,\n      contractBalance, filteredTransactions, minBet, maxBet, minChances, maxChances, network,\n    } = this.state;\n    const setState = dict => this.setState(dict);\n    const rollUnder = chances;\n    const rollDisabled = accountAddress === null;\n    return (\n      <div>\n        <ContractInfo\n          accountAddress={accountAddress}\n          accountBalance={accountBalance}\n          contractAddress={contractAddress}\n          contractBalance={contractBalance}\n          network={network}\n        />\n        <form className=\"RollUnder\">\n          <h2>Place your bet</h2>\n          <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={this.updateState('betSize')} />\n          <ChanceOfWinning chances={chances} min={minChances} max={maxChances} updateChances={this.updateState('chances')} />\n          <RollUnderRecap value={rollUnder} betSize={betSize} />\n          <RollButton isDisabled={rollDisabled} onClick={() => this.onRollClick()} />\n        </form>\n        <Transactions\n          network={network}\n          onClick={transactionsFilter => this.filterTransactions(transactionsFilter, setState)}\n          transactions={filteredTransactions}\n        />\n      </div>\n    );\n  }\n}\nRollUnder.propTypes = BaseGame.propTypes;\n\nexport default RollUnder;\n"]},"metadata":{},"sourceType":"module"}